% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cdr_delete_db_tbl_row.R
\name{cdr_delete_db_tbl_row}
\alias{cdr_delete_db_tbl_row}
\title{Removes specified row from db table}
\usage{
cdr_delete_db_tbl_row(
  db_conn_pool = db_conn_pool,
  db_tbl_name = NULL,
  value_rowuid = NULL,
  value_rowuid_colname = NULL
)
}
\arguments{
\item{db_conn_pool}{pool connection object: the pool of connections established by the session}

\item{db_tbl_name}{string: name of the specific table the value to update is located in}

\item{value_rowuid}{number or string: the specific the unique ID that corresponds to the row to delete}

\item{value_rowuid_colname}{string: the name of the column with the unique ID (key column)}
}
\value{
TRUE for successful deletion
}
\description{
Deletes a row or rows by specifying the unique ids for the rows to delete
Note: not implemented in a UI button, but here for administrator use
}
\examples{
\dontrun{
con <- pool::dbPool(DBI::dbConnect(RSQLite::SQLite(), 'iris.db'))
iris <- dplyr::mutate(iris, unique_id = paste0('uid_',dplyr::row_number()))
cdr_create_new_db_tbls(db_conn_pool = con, db_tbl = iris)
print(here::here('iris.db'))
cdr_delete_db_tbl_row(
  db_conn_pool = con,
  db_tbl_name = 'iris', #'iris_deltas'
  value_rowuid = 'uid_1',
  value_rowuid_colname = 'unique_id'
  )
pool::poolClose(con)
}

}
